parser ArithParser where

{ open ArithToken }

token {ArithToken.t}
    = Plus '+'
    | Times '*'
    | LParen '('
    | RParen ')'
    | Num
    ;

rules

start expr = term terms { foldl op+ term terms };

terms
    = '+' term terms { term :: terms }
    |                { [] }
    ;

term = factor factors { foldl op* factor factors };

factors
    = '*' factor factors { factor :: factors }
    |                    { [] }
    ;

factor
    = '(' expr ')' { expr }
    | Num          { valOf (tokenInt tokNum) }
    ;

